#!/usr/bin/env ruby

require './app'
require 'zendesk_api'
require 'json'

require 'dotenv'
Dotenv.load

start_time = 0
next_page = true

client = ZendeskAPI::Client.new do |config|

  config.url = ENV['ZD_URL'] # e.g. https://mydesk.zendesk.com/api/v2
  config.username = ENV['ZD_USER']
  config.token = ENV['ZD_TOKEN']

  # Retry uses middleware to notify the user
  # when hitting the rate limit, sleep automatically,
  # then retry the request.
  config.retry = true

  # Logger prints to STDERR by default, to e.g. print to stdout:
  require 'logger'
  config.logger = Logger.new(STDOUT)
end

Thread.new{get_metrics}

def get_metrics
  tickets = ZendeskAPI::Ticket.incremental_export(client, start_time)

  while next_page
    tickets.each do |ticket|
      # search for tickets and update their values if found
      if MyApp::Ticket.get(ticket_id: ticket.id)
        ticket.update(wait_time: ticket.requester_wait_time_in_minutes,
                      reply_time: ticket.reply_time_in_minutes,
                      resolution_time: ticket.full_resolution_time_in_minutes)
      else
        MyApp::Ticket.create(ticket_id: ticket.id,
                              wait_time: ticket.requester_wait_time_in_minutes,
                              reply_time: ticket.reply_time_in_minutes,
                              resolution_time: ticket.full_resolution_time_in_minutes)
      end
    end
    tickets.next
  end
end

